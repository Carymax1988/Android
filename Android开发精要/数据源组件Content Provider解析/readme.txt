ContentResolver相当于数据源组件的DNS和本地代理，它负责将各个URI定位到具体的数据源组件，并经由它对数据源进行增、删、改、查等操作。
ContentResolver提供的数据操作接口，与ContentProvider中的函数一一对应，只是在参数中附加了一个定位数据源组件的URI对象。ContentResolver对数据的操作，其实是分两个步骤完成的。首先是定位，根据URI找到对应的数据源组件，然后，通过对应的数据源组件执行所请求的操作。
当ContentResolver收到数据操作请求时，会先根据URI的信息去查找对应的数据源组件。ContentResolver对象中，有一个数据源组件的缓存对象ProviderMap，它是一个哈希表，存储各个URI对应到数据源组件对象。如果ContentResolver在缓存中未能查到对应的数据源组件，则会将查找请求发送给组件管理服务，该服务会负责查找到对应数据源组件的信息，并在ContentResolver中构造对象缓存。
ContentResolver缓存的数据源组件对象，其实是对应数据源组件的代理。当ContentResolver调用其接口进行操作时，相关指令会打包成消息，并通过Android进程间通信机制传到远端的数据源组件中，而数据源组件执行完成后再将结果序列化传回，整个流程是个同步的操作。
ContentResolver进程间通信一次性拷贝全部数据不仅消耗时间，也会浪费内存；而每次拷贝一条数据则会增加进程间通信的成本。因此，Android采用了数据窗口的模式。在数据指针对象android.database.Cursor中，包含一个android.database.CursorWindow对象，它会在调用者一端缓存部分数据，缓存数据的内容包括当前指针指向位置相关的若干条数据。CursorWindow类的底层实现是基于C++的，以此来提高执行效率。